"use strict";

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");
exports.__esModule = true;
exports.default = void 0;
var _stampit = _interopRequireDefault(require("stampit"));
var _ramda = require("ramda");
var _apidomParserAdapterAsyncapiJson = require("@swagger-api/apidom-parser-adapter-asyncapi-json-2");
var _index = require("../../../util/errors/index.cjs");
var _Parser = _interopRequireDefault(require("../Parser.cjs"));
const AsyncApiJson2Parser = (0, _stampit.default)(_Parser.default, {
  props: {
    name: 'asyncapi-json-2',
    fileExtensions: ['.json'],
    mediaTypes: _apidomParserAdapterAsyncapiJson.mediaTypes
  },
  methods: {
    async canParse(file) {
      const hasSupportedFileExtension = this.fileExtensions.length === 0 ? true : this.fileExtensions.includes(file.extension);
      const hasSupportedMediaType = this.mediaTypes.includes(file.mediaType);
      if (!hasSupportedFileExtension) return false;
      if (hasSupportedMediaType) return true;
      if (!hasSupportedMediaType) {
        return (0, _apidomParserAdapterAsyncapiJson.detect)(file.toString());
      }
      return false;
    },
    async parse(file) {
      const source = file.toString();
      try {
        const parserOpts = (0, _ramda.pick)(['sourceMap', 'syntacticAnalysis', 'refractorOpts'], this);
        return await (0, _apidomParserAdapterAsyncapiJson.parse)(source, parserOpts);
      } catch (error) {
        throw new _index.ParserError(`Error parsing "${file.uri}"`, {
          cause: error
        });
      }
    }
  }
});
var _default = AsyncApiJson2Parser;
exports.default = _default;