import FallbackVisitor from "./visitors/FallbackVisitor.js";
import JSONSchemaVisitor from "./visitors/json-schema/index.js";
import JSONSchemaIdVisitor from "./visitors/json-schema/IdVisitor.js";
import JSONSchema$schemaVisitor from "./visitors/json-schema/$schemaVisitor.js";
import JSONSchemaMultipleOfVisitor from "./visitors/json-schema/MultipleOfVisitor.js";
import JSONSchemaMaximumVisitor from "./visitors/json-schema/MaximumVisitor.js";
import JSONSchemaExclusiveMaximumVisitor from "./visitors/json-schema/ExclusiveMaximumVisitor.js";
import JSONSchemaMinimumVisitor from "./visitors/json-schema/MinimumVisitor.js";
import JSONSchemaExclusiveMinimumVisitor from "./visitors/json-schema/ExclusiveMinimumVisitor.js";
import JSONSchemaMaxLengthVisitor from "./visitors/json-schema/MaxLengthVisitor.js";
import JSONSchemaMinLengthVisitor from "./visitors/json-schema/MinLengthVisitor.js";
import JSONSchemaPatternVisitor from "./visitors/json-schema/PatternVisitor.js";
import JSONSchemaItemsVisitor from "./visitors/json-schema/ItemsVisitor.js";
import JSONSchemaMaxItemsVisitor from "./visitors/json-schema/MaxItemsVisitor.js";
import JSONSchemaMinItemsVisitor from "./visitors/json-schema/MinItemsVisitor.js";
import JSONSchemaUniqueItemsVisitor from "./visitors/json-schema/UniqueItemsVisitor.js";
import JSONSchemaMaxPropertiesVisitor from "./visitors/json-schema/MaxPropertiesVisitor.js";
import JSONSchemaMinPropertiesVisitor from "./visitors/json-schema/MinPropertiesVisitor.js";
import JSONSchemaRequiredVisitor from "./visitors/json-schema/RequiredVisitor.js";
import JSONSchemaPropertiesVisitor from "./visitors/json-schema/PropertiesVisitor.js";
import JSONSchemaPatternPropertiesVisitor from "./visitors/json-schema/PatternPropertiesVisitor.js";
import JSONSchemaDependenciesVisitor from "./visitors/json-schema/DependenciesVisitor.js";
import JSONSchemaEnumVisitor from "./visitors/json-schema/EnumVisitor.js";
import JSONSchemaTypeVisitor from "./visitors/json-schema/TypeVisitor.js";
import JSONSchemaAllOfVisitor from "./visitors/json-schema/AllOfVisitor.js";
import JSONSchemaAnyOfVisitor from "./visitors/json-schema/AnyOfVisitor.js";
import JSONSchemaOneOfVisitor from "./visitors/json-schema/OneOfVisitor.js";
import JSONSchemaDefinitionsVisitor from "./visitors/json-schema/DefinitionsVisitor.js";
import JSONSchemaTitleVisitor from "./visitors/json-schema/TitleVisitor.js";
import JSONSchemaDescriptionVisitor from "./visitors/json-schema/DescriptionVisitor.js";
import JSONSchemaDefaultVisitor from "./visitors/json-schema/DefaultVisitor.js";
import JSONSchemaFormatVisitor from "./visitors/json-schema/FormatVisitor.js";
import JSONSchemaBaseVisitor from "./visitors/json-schema/BaseVisitor.js";
import JSONSchemaLinksVisitor from "./visitors/json-schema/LinksVisitor.js";
import JSONSchemaReadOnlyVisitor from "./visitors/json-schema/ReadOnlyVisitor.js";
import JSONReferenceVisitor from "./visitors/json-schema/json-reference/index.js";
import JSONReference$RefVisitor from "./visitors/json-schema/json-reference/$RefVisitor.js";
import JSONSchemaOrJSONReferenceVisitor from "./visitors/json-schema/JSONSchemaOrJSONReferenceVisitor.js";
import MediaVisitor from "./visitors/json-schema/media/index.js";
import MediaBinaryEncodingVisitor from "./visitors/json-schema/media/BinaryEncodingVisitor.js";
import MediaTypeVisitor from "./visitors/json-schema/media/TypeVisitor.js";
import LinkDescriptionVisitor from "./visitors/json-schema/link-description/index.js";
import LinkDescriptionHrefVisitor from "./visitors/json-schema/link-description/HrefVisitor.js";
import LinkDescriptionRelVisitor from "./visitors/json-schema/link-description/RelVisitor.js";
import LinkDescriptionTitleVisitor from "./visitors/json-schema/link-description/TitleVisitor.js";
import LinkDescriptionMediaTypeVisitor from "./visitors/json-schema/link-description/MediaTypeVisitor.js";
import LinkDescriptionMethodVisitor from "./visitors/json-schema/link-description/MethodVisitor.js";
import LinkDescriptionEncTypeVisitor from "./visitors/json-schema/link-description/EncTypeVisitor.js";
/**
 * Specification object allows us to have complete control over visitors
 * when traversing the ApiDOM.
 * Specification also allows us to create amended refractors from
 * existing ones by manipulating it.
 *
 * Note: Specification object allows to use absolute internal JSON pointers.
 */
const specification = {
  visitors: {
    value: FallbackVisitor,
    JSONSchemaOrJSONReferenceVisitor,
    document: {
      objects: {
        JSONSchema: {
          $visitor: JSONSchemaVisitor,
          fixedFields: {
            // core vocabulary
            id: JSONSchemaIdVisitor,
            $schema: JSONSchema$schemaVisitor,
            // validation vocabulary
            // validation keywords for numeric instances (number and integer)
            multipleOf: JSONSchemaMultipleOfVisitor,
            maximum: JSONSchemaMaximumVisitor,
            exclusiveMaximum: JSONSchemaExclusiveMaximumVisitor,
            minimum: JSONSchemaMinimumVisitor,
            exclusiveMinimum: JSONSchemaExclusiveMinimumVisitor,
            // validation keywords for strings
            maxLength: JSONSchemaMaxLengthVisitor,
            minLength: JSONSchemaMinLengthVisitor,
            pattern: JSONSchemaPatternVisitor,
            // validation keywords for arrays
            additionalItems: JSONSchemaOrJSONReferenceVisitor,
            items: JSONSchemaItemsVisitor,
            maxItems: JSONSchemaMaxItemsVisitor,
            minItems: JSONSchemaMinItemsVisitor,
            uniqueItems: JSONSchemaUniqueItemsVisitor,
            // validation keywords for objects
            maxProperties: JSONSchemaMaxPropertiesVisitor,
            minProperties: JSONSchemaMinPropertiesVisitor,
            required: JSONSchemaRequiredVisitor,
            properties: JSONSchemaPropertiesVisitor,
            additionalProperties: JSONSchemaOrJSONReferenceVisitor,
            patternProperties: JSONSchemaPatternPropertiesVisitor,
            dependencies: JSONSchemaDependenciesVisitor,
            // validation keywords for any instance type
            enum: JSONSchemaEnumVisitor,
            type: JSONSchemaTypeVisitor,
            allOf: JSONSchemaAllOfVisitor,
            anyOf: JSONSchemaAnyOfVisitor,
            oneOf: JSONSchemaOneOfVisitor,
            not: JSONSchemaOrJSONReferenceVisitor,
            definitions: JSONSchemaDefinitionsVisitor,
            // metadata keywords
            title: JSONSchemaTitleVisitor,
            description: JSONSchemaDescriptionVisitor,
            default: JSONSchemaDefaultVisitor,
            // semantic validation with "format"
            format: JSONSchemaFormatVisitor,
            // JSON Hyper-Schema
            base: JSONSchemaBaseVisitor,
            links: JSONSchemaLinksVisitor,
            media: {
              $ref: '#/visitors/document/objects/Media'
            },
            readOnly: JSONSchemaReadOnlyVisitor
          }
        },
        JSONReference: {
          $visitor: JSONReferenceVisitor,
          fixedFields: {
            $ref: JSONReference$RefVisitor
          }
        },
        Media: {
          $visitor: MediaVisitor,
          fixedFields: {
            binaryEncoding: MediaBinaryEncodingVisitor,
            type: MediaTypeVisitor
          }
        },
        LinkDescription: {
          $visitor: LinkDescriptionVisitor,
          fixedFields: {
            href: LinkDescriptionHrefVisitor,
            rel: LinkDescriptionRelVisitor,
            title: LinkDescriptionTitleVisitor,
            targetSchema: JSONSchemaOrJSONReferenceVisitor,
            mediaType: LinkDescriptionMediaTypeVisitor,
            method: LinkDescriptionMethodVisitor,
            encType: LinkDescriptionEncTypeVisitor,
            schema: JSONSchemaOrJSONReferenceVisitor
          }
        }
      }
    }
  }
};
export default specification;