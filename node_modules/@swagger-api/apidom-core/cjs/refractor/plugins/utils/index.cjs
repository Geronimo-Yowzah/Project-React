"use strict";

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");
exports.__esModule = true;
exports.dispatchPlugins = void 0;
var _ramda = require("ramda");
var _ramdaAdjunct = require("ramda-adjunct");
var _toolbox = _interopRequireDefault(require("../../toolbox.cjs"));
var _visitor = require("../../../traversal/visitor.cjs");
// eslint-disable-next-line import/prefer-default-export
const dispatchPlugins = (element, plugins, options = {}) => {
  if (plugins.length === 0) return element;
  const toolboxCreator = (0, _ramda.propOr)(_toolbox.default, 'toolboxCreator', options);
  const visitorOptions = (0, _ramda.propOr)({}, 'visitorOptions', options);
  const nodeTypeGetter = (0, _ramda.propOr)(_visitor.getNodeType, 'nodeTypeGetter', visitorOptions);
  const toolbox = toolboxCreator();
  const pluginsSpecs = plugins.map(plugin => plugin(toolbox));
  const pluginsVisitor = (0, _visitor.mergeAllVisitors)(pluginsSpecs.map((0, _ramda.propOr)({}, 'visitor')), {
    nodeTypeGetter
  });
  pluginsSpecs.forEach((0, _ramdaAdjunct.invokeArgs)(['pre'], []));
  const newElement = (0, _visitor.visit)(element, pluginsVisitor, visitorOptions);
  pluginsSpecs.forEach((0, _ramdaAdjunct.invokeArgs)(['post'], []));
  return newElement;
};
exports.dispatchPlugins = dispatchPlugins;