import { propOr } from 'ramda';
import { invokeArgs } from 'ramda-adjunct';
import createToolbox from "../../toolbox.js";
import { getNodeType, mergeAllVisitors, visit } from "../../../traversal/visitor.js"; // eslint-disable-next-line import/prefer-default-export
export const dispatchPlugins = (element, plugins, options = {}) => {
  if (plugins.length === 0) return element;
  const toolboxCreator = propOr(createToolbox, 'toolboxCreator', options);
  const visitorOptions = propOr({}, 'visitorOptions', options);
  const nodeTypeGetter = propOr(getNodeType, 'nodeTypeGetter', visitorOptions);
  const toolbox = toolboxCreator();
  const pluginsSpecs = plugins.map(plugin => plugin(toolbox));
  const pluginsVisitor = mergeAllVisitors(pluginsSpecs.map(propOr({}, 'visitor')), {
    nodeTypeGetter
  });
  pluginsSpecs.forEach(invokeArgs(['pre'], []));
  const newElement = visit(element, pluginsVisitor, visitorOptions);
  pluginsSpecs.forEach(invokeArgs(['post'], []));
  return newElement;
};